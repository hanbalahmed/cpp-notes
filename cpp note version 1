C++ NOTES:

using namespace std;
	means that we can use names for objects and variables from the standard library.


#include <iostream>
	is a header file library that lets us work with input and output objects, such as cout.
Header files add functionality to C++ programs

C++ ignores white space. But we use it to make the code more readable.

return 0;
	ends the main function.

Note: Every C++ statement ends with a semicolon ;

You might see some C++ programs that runs without the standard namespace library. 
The using namespace std line can be omitted and replaced with the std keyword, 
followed by the :: operator for some objects.

The cout object, together with the << operator, is used to output values/print text:

You can add as many cout objects as you want. 
However, note that it does not insert a new line at the end of the output:

To insert a new line, you can use the \n character:

Two \n characters after each other will create a blank line:

Another way to insert a new line, is with the endl manipulator:

Both \n and endl are used to break lines. However, \n is most used.

But what is \n exactly?
The newline character (\n) is called an escape sequence, 
and it forces the cursor to change its position to the beginning of the next line on the screen.
This results in a new line.

\t	Creates a horizontal tab	
\\	Inserts a backslash character (\)	
\"	Inserts a double quote character

Comments can be used to explain C++ code, and to make it more readable.
It can also be used to prevent execution when testing alternative code.
Comments can be singled-lined or multi-lined.

Single-line comments start with two forward slashes (//).
Any text between // and the end of the line is ignored by the compiler (will not be executed).

Multi-line comments start with /* and ends with */.
Any text between /* and */ will be ignored by the compiler:

In C++, there are different types of variables (defined with different keywords), for example:

int - stores integers (whole numbers), without decimals, such as 123 or -123
double - stores floating point numbers, with decimals, such as 19.99 or -19.99
char - stores single characters, such as 'a' or 'B'. Char values are surrounded by single quotes
string - stores text, such as "Hello World". String values are surrounded by double quotes
bool - stores values with two states: true or false
